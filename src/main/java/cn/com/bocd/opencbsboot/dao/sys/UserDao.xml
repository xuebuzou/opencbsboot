<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.bocd.opencbsboot.dao.sys.UserDao">
    <resultMap id="userMap" type="cn.com.bocd.opencbsboot.entity.sys.UserVO">
        <id property="id" column="id"/>
        <result property="cnname" column="cnname"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="email" column="email"/>
        <result property="telephone" column="telephone"/>
        <result property="mobilePhone" column="mobile_phone"/>
        <result property="wechatId" column="wechat_id"/>
        <result property="skill" column="skill"/>
        <result property="departmentId" column="department_id"/>
        <result property="loginCount" column="login_count"/>
        <collection property="roles" ofType="cn.com.bocd.opencbsboot.entity.sys.Role">
            <result column="name" property="name"/>
        </collection>
    </resultMap>

    <sql id="queryCondition">
        <where>
            <if test="id != null and id != ''">
                and id = #{id}
            </if>
            <if test="cnname != null and cnname != ''">
                and cnname = #{cnname}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="telephone != null and telephone != ''">
                and telephone = #{telephone}
            </if>
            <if test="mobilePhone != null and mobilePhone != ''">
                and mobile_phone = #{mobilePhone}
            </if>
            <if test="wechatId != null and wechatId != ''">
                and wechat_id = #{wechatId}
            </if>
            <if test="skill != null and skill != ''">
                and skill = #{skill}
            </if>
            <if test="departmentId != null and departmentId != ''">
                and department_id = #{departmentId}
            </if>
            <if test="loginCount != null and loginCount != ''">
                and login_count = #{loginCount}
            </if>
            <if test="keywords != null and keywords != ''">
                and (
                cnname like CONCAT('%', #{keywords},'%')
                OR username like CONCAT('%', #{keywords},'%')
                OR telephone like CONCAT('%', #{keywords},'%')
                OR mobile_phone like CONCAT('%', #{keywords},'%')
                OR email like CONCAT('%', #{keywords},'%')
                OR skill like CONCAT('%', #{keywords},'%')
                OR wechat_id like CONCAT('%', #{keywords},'%')
                )
            </if>
        </where>
    </sql>

    <select id="getByMap" parameterType="map" resultMap="userMap">
        SELECT * FROM ZG_USER
        <include refid="queryCondition"/>
    </select>

    <select id="getById" parameterType="int" resultMap="userMap">
        SELECT *
        FROM ZG_USER
        WHERE id = #{id}
    </select>

    <resultMap type="cn.com.bocd.opencbsboot.entity.sys.UserVO" id="UserAndRulesResultMap">
        <id column="user_id" property="id"/>
        <result column="username" property="username"/>
        <result column="cnname" property="cnname"/>
        <result column="password" property="password"/>
        <result column="depId" property="depId"/>
        <result column="departmentId" property="departmentId"/>
        <result column="telephone" property="telephone"/>
        <result column="mobilePhone" property="mobilePhone"/>
        <result column="role_id" property="roleId"/>
        <result column="role_name" property="roleName"/>
        <result column="role_desc" property="roleDesc"/>
        <collection property="roles" ofType="cn.com.bocd.opencbsboot.entity.sys.Role">
            <id column="role_id" property="id"/>
            <result column="role_name" property="name"/>
            <result column="role_desc" property="description"/>
        </collection>
    </resultMap>

    <select id="getByUserName" parameterType="String" resultMap="UserAndRulesResultMap">
        select a.ID            user_id
             , a.CNNAME        cnname
             , a.USERNAME      username
             , a.PASSWORD      password
             , a.email         email
             , a.TELEPHONE     telephone
             , a.MOBILE_PHONE  mobilePhone
             , a.WECHAT_ID     wechatId
             , a.SKILL         skill
             , a.DEPARTMENT_ID departmentId
             , a.LOGIN_COUNT   loginCount
             , c.ID          role_id
             , c.NAME        role_name
             , c.DESCRIPTION   role_desc
        from ZG_USER a
                 inner join ZG_USER_ROLE b on a.ID = b.USER_ID
                 inner join ZG_ROLE c on b.ROLE_ID = c.ID
        where username = #{userName}
    </select>

    <insert id="create" parameterType="cn.com.bocd.opencbsboot.entity.sys.UserVO">
        <selectKey resultType="int" order="BEFORE" keyProperty="id">
            select nvl(max(id), 0)+1 from ZG_USER
        </selectKey>
        INSERT INTO ZG_USER(
        id,
        cnname,
        username,
        password,
        telephone,
        mobile_phone
        )VALUES(
        #{id},
        #{cnname},
        #{username},
        #{password},
        #{telephone},
        #{mobilePhone}
        )
    </insert>

    <insert id="createUserRole" parameterType="cn.com.bocd.opencbsboot.entity.sys.UserVO">
        <selectKey resultType="int" order="BEFORE" keyProperty="id">
            select ID from ZG_USER
            WHERE USERNAME = #{username}
        </selectKey>
        INSERT INTO ZG_USER_ROLE(
        USER_ID,
        ROLE_ID)VALUES(
        #{id},
        #{roleId}
        )
    </insert>

    <insert id="createUserDep" parameterType="cn.com.bocd.opencbsboot.entity.sys.UserVO">
        <selectKey resultType="int" order="BEFORE" keyProperty="id">
            select ID from ZG_USER
            WHERE USERNAME = #{username}
        </selectKey>
        INSERT INTO ZG_USER_DEP(
        USER_ID,
        DEP_ID)VALUES(
        #{id},
        #{depId}
        )
    </insert>

    <update id="update" parameterType="cn.com.bocd.opencbsboot.entity.sys.UserVO">
        UPDATE ZG_USER
        SET cnname        = #{cnname},
            telephone     = #{telephone},
            mobile_phone  = #{mobilePhone}
        WHERE username = #{username}
    </update>

    <update id="updateUserRole" parameterType="cn.com.bocd.opencbsboot.entity.sys.UserVO">
        <selectKey resultType="int" order="BEFORE" keyProperty="id">
            select ID from ZG_USER
            WHERE USERNAME = #{username}
        </selectKey>
        UPDATE ZG_USER_ROLE
        SET ROLE_ID       = #{roleId}
        WHERE user_id = #{id}
    </update>

    <update id="updateUserDep" parameterType="cn.com.bocd.opencbsboot.entity.sys.UserVO">
        <selectKey resultType="int" order="BEFORE" keyProperty="id">
            select ID from ZG_USER
            WHERE USERNAME = #{username}
        </selectKey>
        UPDATE ZG_USER_DEP
        SET dep_id      = #{depId}
        WHERE user_id = #{id}
    </update>

    <update id="resetPwd" parameterType="cn.com.bocd.opencbsboot.entity.sys.UserVO">
        UPDATE ZG_USER
        SET PASSWORD      = #{password}
        WHERE username = #{username}
    </update>

    <delete id="delete" parameterType="int">
        DELETE
        FROM ZG_USER
        WHERE id = #{id}
    </delete>

    <select id="queryUserInfo" parameterType="cn.com.bocd.opencbsboot.entity.sys.UserVO" resultMap="UserAndRulesResultMap">
        select a.ID            user_id
        , a.CNNAME        cnname
        , a.USERNAME      username
        , a.PASSWORD      password
        , a.email         email
        , a.TELEPHONE     telephone
        , a.MOBILE_PHONE  mobilePhone
        , a.WECHAT_ID     wechatId
        , a.SKILL         skill
        , e.DEP_ID   depId
        , e.DEP_CODE departmentId
        , a.LOGIN_COUNT   loginCount
        , c.ID          role_id
        , c.NAME        role_name
        , c.DESCRIPTION   role_desc
        from ZG_USER a, ZG_USER_ROLE b, ZG_ROLE c, ZG_USER_DEP d, ZG_DEP e
        <include refid="queryConditions1" />
    </select>

    <sql id="queryConditions1">
        <where>
            a.ID = b.USER_ID
            AND b.ROLE_ID = c.ID
            AND a.ID = d.user_id
            AND d.dep_id = e.dep_id
            <if test="username!=null and username!=''">
                and a.USERNAME = #{username}
            </if>
            <if test="cnname!=null and cnname!=''">
                and a.cnname = #{cnname}
            </if>
            <if test="depId!=null and depId!=''">
                and d.dep_id = #{depId}
            </if>
            <if test="roleId!=null and roleId!=''">
                and b.role_id = #{roleId}
            </if>
        </where>
    </sql>

</mapper>